{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hrithik/Hrithik/MyGithub/RN-Basic-ToDo/App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Header from \"./Components/header\";\nimport TodoList from \"./Components/TodoItem\";\nimport AddToDo from \"./Components/addToDo\";\nexport default function App() {\n  var _useState = useState([{\n    text: 'Buy A Earphone',\n    key: '2'\n  }, {\n    text: 'Learn React-Native',\n    key: '3'\n  }, {\n    text: 'Solve 250 Spoj Problem',\n    key: '4'\n  }, {\n    text: 'Build a Minimal App',\n    key: '5'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      toDo = _useState2[0],\n      setToDo = _useState2[1];\n\n  var AddInput = function AddInput(input) {\n    if (input.length > 3) {\n      setToDo(function (prevTodo) {\n        return [{\n          text: input,\n          key: Math.random().toString()\n        }].concat(_toConsumableArray(prevTodo));\n      });\n    } else {\n        Alert.alert('OOPS!', 'Todos Must be 3 Char Long', [{\n          text: 'Understood',\n          onPress: function onPress() {\n            return console.log('alert closed');\n          }\n        }]);\n      }\n  };\n\n  var pressHandler = function pressHandler(key) {\n    setToDo(function (prevTodo) {\n      return prevTodo.filter(function (todo) {\n        return todo.key != key;\n      });\n    });\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n      console.log('Dismiss KeyBoard');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(AddToDo, {\n    AddInput: AddInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(FlatList, {\n    data: toDo,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TodoList, {\n        item: item,\n        pressHandler: pressHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingTop: 40\n  },\n  content: {\n    flex: 1,\n    padding: 40\n  },\n  list: {\n    flex: 1,\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["/home/hrithik/Hrithik/MyGithub/RN-Basic-ToDo/App.js"],"names":["React","useState","Header","TodoList","AddToDo","App","text","key","toDo","setToDo","AddInput","input","length","prevTodo","Math","random","toString","Alert","alert","onPress","console","log","pressHandler","filter","todo","Keyboard","dismiss","styles","container","content","list","item","StyleSheet","create","flex","backgroundColor","paddingTop","padding","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, FlatList, Alert, TouchableWithoutFeedback, Keyboard } from 'react-native';\nimport Header from './Components/header';\nimport TodoList from './Components/TodoItem';\nimport AddToDo from './Components/addToDo';\n\nexport default function App() {\n\n  const [toDo, setToDo] = useState([\n    { text: 'Buy A Earphone', key: '2' },\n    { text: 'Learn React-Native', key: '3' },\n    { text: 'Solve 250 Spoj Problem', key: '4' },\n    { text: 'Build a Minimal App', key: '5' },\n  ]);\n\n  const AddInput = (input) => {\n    if (input.length > 3) {\n      setToDo(prevTodo => {\n        return [\n          { text: input, key: Math.random().toString() },\n          ...prevTodo\n          // Spread Operator\n        ]\n      }\n      )\n    }\n    //If The Input is Smaller than 3 char \n    else {\n      //alert has 3 parameter Header=OPPS,Msg=Todos,Array[]=text for button,after pressing Button\n      Alert.alert('OOPS!', 'Todos Must be 3 Char Long', [\n        { text: 'Understood', onPress: () => console.log('alert closed') }\n      ])\n    }\n  }\n\n  const pressHandler = (key) => {\n    setToDo((prevTodo) => {\n      return prevTodo.filter(todo => todo.key != key);\n\n    });\n\n  }\n  return (\n\n    <TouchableWithoutFeedback onPress={() => {\n      Keyboard.dismiss();\n      console.log('Dismiss KeyBoard')\n    }}>\n      <View style={styles.container}>\n        {/* the First View it wrap around the whole Screen */}\n        <Header />\n        <View style={styles.content}>\n          {/* This one for the  */}\n          <AddToDo AddInput={AddInput} />\n\n          <View style={styles.list}>\n            <FlatList\n              data={toDo}\n              renderItem={({ item }) =>\n                <TodoList item={item} pressHandler={pressHandler} />\n              }\n            />\n          </View>\n\n        </View>\n\n\n      </View>\n    </TouchableWithoutFeedback>\n\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    // alignItems: 'center',\n    //justifyContent: 'center',\n    paddingTop: 40\n  },\n  content: {\n    flex: 1,\n    padding: 40,\n    // backgroundColor: 'yellow'\n  },\n  list: {\n    flex: 1,\n    //  backgroundColor: 'blue',\n    marginTop: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}